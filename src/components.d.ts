/**
 * This is an autogenerated file created by the Stencil build process.
 * It contains typing information for all components that exist in this project
 * and imports for stencil collections that might be configured in your stencil.config.js file
 */

import '@stencil/core';

declare global {
  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {}
  }
  namespace JSXElements {}

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;
    componentOnReady(done: (ele?: this) => void): void;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}
}

import 'ionicons';
import '@ionic/core';


declare global {
  interface HTMLAppRootElement extends HTMLStencilElement {

  }
  var HTMLAppRootElement: {
    prototype: HTMLAppRootElement;
    new (): HTMLAppRootElement;
  };
  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'app-root': JSXElements.AppRootAttributes;
    }
  }
  namespace JSXElements {
    export interface AppRootAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageAboutPopoverElement extends HTMLStencilElement {

  }
  var HTMLPageAboutPopoverElement: {
    prototype: HTMLPageAboutPopoverElement;
    new (): HTMLPageAboutPopoverElement;
  };
  interface HTMLElementTagNameMap {
    'page-about-popover': HTMLPageAboutPopoverElement;
  }
  interface ElementTagNameMap {
    'page-about-popover': HTMLPageAboutPopoverElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-about-popover': JSXElements.PageAboutPopoverAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAboutPopoverAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageAboutElement extends HTMLStencilElement {

  }
  var HTMLPageAboutElement: {
    prototype: HTMLPageAboutElement;
    new (): HTMLPageAboutElement;
  };
  interface HTMLElementTagNameMap {
    'page-about': HTMLPageAboutElement;
  }
  interface ElementTagNameMap {
    'page-about': HTMLPageAboutElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-about': JSXElements.PageAboutAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAboutAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageAccountElement extends HTMLStencilElement {

  }
  var HTMLPageAccountElement: {
    prototype: HTMLPageAccountElement;
    new (): HTMLPageAccountElement;
  };
  interface HTMLElementTagNameMap {
    'page-account': HTMLPageAccountElement;
  }
  interface ElementTagNameMap {
    'page-account': HTMLPageAccountElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-account': JSXElements.PageAccountAttributes;
    }
  }
  namespace JSXElements {
    export interface PageAccountAttributes extends HTMLAttributes {
      'onUserDidLogOut'?: (event: CustomEvent) => void;
    }
  }
}


declare global {
  interface HTMLPageLoginElement extends HTMLStencilElement {

  }
  var HTMLPageLoginElement: {
    prototype: HTMLPageLoginElement;
    new (): HTMLPageLoginElement;
  };
  interface HTMLElementTagNameMap {
    'page-login': HTMLPageLoginElement;
  }
  interface ElementTagNameMap {
    'page-login': HTMLPageLoginElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-login': JSXElements.PageLoginAttributes;
    }
  }
  namespace JSXElements {
    export interface PageLoginAttributes extends HTMLAttributes {
      'onUserDidLogIn'?: (event: CustomEvent) => void;
    }
  }
}


declare global {
  interface HTMLPageMapElement extends HTMLStencilElement {

  }
  var HTMLPageMapElement: {
    prototype: HTMLPageMapElement;
    new (): HTMLPageMapElement;
  };
  interface HTMLElementTagNameMap {
    'page-map': HTMLPageMapElement;
  }
  interface ElementTagNameMap {
    'page-map': HTMLPageMapElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-map': JSXElements.PageMapAttributes;
    }
  }
  namespace JSXElements {
    export interface PageMapAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageScheduleFilterElement extends HTMLStencilElement {

  }
  var HTMLPageScheduleFilterElement: {
    prototype: HTMLPageScheduleFilterElement;
    new (): HTMLPageScheduleFilterElement;
  };
  interface HTMLElementTagNameMap {
    'page-schedule-filter': HTMLPageScheduleFilterElement;
  }
  interface ElementTagNameMap {
    'page-schedule-filter': HTMLPageScheduleFilterElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-schedule-filter': JSXElements.PageScheduleFilterAttributes;
    }
  }
  namespace JSXElements {
    export interface PageScheduleFilterAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageScheduleElement extends HTMLStencilElement {

  }
  var HTMLPageScheduleElement: {
    prototype: HTMLPageScheduleElement;
    new (): HTMLPageScheduleElement;
  };
  interface HTMLElementTagNameMap {
    'page-schedule': HTMLPageScheduleElement;
  }
  interface ElementTagNameMap {
    'page-schedule': HTMLPageScheduleElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-schedule': JSXElements.PageScheduleAttributes;
    }
  }
  namespace JSXElements {
    export interface PageScheduleAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageSessionElement extends HTMLStencilElement {
    'goback': string;
    'sessionId': string;
  }
  var HTMLPageSessionElement: {
    prototype: HTMLPageSessionElement;
    new (): HTMLPageSessionElement;
  };
  interface HTMLElementTagNameMap {
    'page-session': HTMLPageSessionElement;
  }
  interface ElementTagNameMap {
    'page-session': HTMLPageSessionElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-session': JSXElements.PageSessionAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSessionAttributes extends HTMLAttributes {
      'goback'?: string;
      'sessionId'?: string;
    }
  }
}


declare global {
  interface HTMLPageSignupElement extends HTMLStencilElement {

  }
  var HTMLPageSignupElement: {
    prototype: HTMLPageSignupElement;
    new (): HTMLPageSignupElement;
  };
  interface HTMLElementTagNameMap {
    'page-signup': HTMLPageSignupElement;
  }
  interface ElementTagNameMap {
    'page-signup': HTMLPageSignupElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-signup': JSXElements.PageSignupAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSignupAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageSpeakerDetailElement extends HTMLStencilElement {
    'speakerId': string;
  }
  var HTMLPageSpeakerDetailElement: {
    prototype: HTMLPageSpeakerDetailElement;
    new (): HTMLPageSpeakerDetailElement;
  };
  interface HTMLElementTagNameMap {
    'page-speaker-detail': HTMLPageSpeakerDetailElement;
  }
  interface ElementTagNameMap {
    'page-speaker-detail': HTMLPageSpeakerDetailElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-speaker-detail': JSXElements.PageSpeakerDetailAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSpeakerDetailAttributes extends HTMLAttributes {
      'speakerId'?: string;
    }
  }
}


declare global {
  interface HTMLPageSpeakerListElement extends HTMLStencilElement {

  }
  var HTMLPageSpeakerListElement: {
    prototype: HTMLPageSpeakerListElement;
    new (): HTMLPageSpeakerListElement;
  };
  interface HTMLElementTagNameMap {
    'page-speaker-list': HTMLPageSpeakerListElement;
  }
  interface ElementTagNameMap {
    'page-speaker-list': HTMLPageSpeakerListElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-speaker-list': JSXElements.PageSpeakerListAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSpeakerListAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageSupportElement extends HTMLStencilElement {

  }
  var HTMLPageSupportElement: {
    prototype: HTMLPageSupportElement;
    new (): HTMLPageSupportElement;
  };
  interface HTMLElementTagNameMap {
    'page-support': HTMLPageSupportElement;
  }
  interface ElementTagNameMap {
    'page-support': HTMLPageSupportElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-support': JSXElements.PageSupportAttributes;
    }
  }
  namespace JSXElements {
    export interface PageSupportAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageTabsElement extends HTMLStencilElement {

  }
  var HTMLPageTabsElement: {
    prototype: HTMLPageTabsElement;
    new (): HTMLPageTabsElement;
  };
  interface HTMLElementTagNameMap {
    'page-tabs': HTMLPageTabsElement;
  }
  interface ElementTagNameMap {
    'page-tabs': HTMLPageTabsElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-tabs': JSXElements.PageTabsAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTabsAttributes extends HTMLAttributes {

    }
  }
}


declare global {
  interface HTMLPageTutorialElement extends HTMLStencilElement {

  }
  var HTMLPageTutorialElement: {
    prototype: HTMLPageTutorialElement;
    new (): HTMLPageTutorialElement;
  };
  interface HTMLElementTagNameMap {
    'page-tutorial': HTMLPageTutorialElement;
  }
  interface ElementTagNameMap {
    'page-tutorial': HTMLPageTutorialElement;
  }
  namespace JSX {
    interface IntrinsicElements {
      'page-tutorial': JSXElements.PageTutorialAttributes;
    }
  }
  namespace JSXElements {
    export interface PageTutorialAttributes extends HTMLAttributes {

    }
  }
}

declare global { namespace JSX { interface StencilJSX {} } }
