/**
 * This is an autogenerated file created by the Stencil compiler.
 * It contains typing information for all components that exist in this project.
 */
/* tslint:disable */

import '@stencil/core';

import '@ionic/core';
import 'ionicons';




declare global {
  interface HTMLElement {
    componentOnReady?: () => Promise<this | null>;
  }

  interface HTMLStencilElement extends HTMLElement {
    componentOnReady(): Promise<this>;

    forceUpdate(): void;
  }

  interface HTMLAttributes {}

  namespace StencilComponents {

    interface AppRoot {

    }

    interface PageAboutPopover {

    }

    interface PageAbout {

    }

    interface PageAccount {

    }

    interface PageLogin {

    }

    interface PageMap {

    }

    interface PageScheduleFilter {
      'excludedTracks': string[];
    }

    interface PageSchedule {

    }

    interface PageSession {
      'goback': string;
      'sessionId': string;
    }

    interface PageSignup {

    }

    interface PageSpeakerDetail {
      'speakerId': string;
    }

    interface PageSpeakerList {

    }

    interface PageSupport {

    }

    interface PageTabs {

    }

    interface PageTutorial {

    }
  }


    interface HTMLAppRootElement extends StencilComponents.AppRoot, HTMLStencilElement {}

    var HTMLAppRootElement: {
      prototype: HTMLAppRootElement;
      new (): HTMLAppRootElement;
    };
    

    interface HTMLPageAboutPopoverElement extends StencilComponents.PageAboutPopover, HTMLStencilElement {}

    var HTMLPageAboutPopoverElement: {
      prototype: HTMLPageAboutPopoverElement;
      new (): HTMLPageAboutPopoverElement;
    };
    

    interface HTMLPageAboutElement extends StencilComponents.PageAbout, HTMLStencilElement {}

    var HTMLPageAboutElement: {
      prototype: HTMLPageAboutElement;
      new (): HTMLPageAboutElement;
    };
    

    interface HTMLPageAccountElement extends StencilComponents.PageAccount, HTMLStencilElement {}

    var HTMLPageAccountElement: {
      prototype: HTMLPageAccountElement;
      new (): HTMLPageAccountElement;
    };
    

    interface HTMLPageLoginElement extends StencilComponents.PageLogin, HTMLStencilElement {}

    var HTMLPageLoginElement: {
      prototype: HTMLPageLoginElement;
      new (): HTMLPageLoginElement;
    };
    

    interface HTMLPageMapElement extends StencilComponents.PageMap, HTMLStencilElement {}

    var HTMLPageMapElement: {
      prototype: HTMLPageMapElement;
      new (): HTMLPageMapElement;
    };
    

    interface HTMLPageScheduleFilterElement extends StencilComponents.PageScheduleFilter, HTMLStencilElement {}

    var HTMLPageScheduleFilterElement: {
      prototype: HTMLPageScheduleFilterElement;
      new (): HTMLPageScheduleFilterElement;
    };
    

    interface HTMLPageScheduleElement extends StencilComponents.PageSchedule, HTMLStencilElement {}

    var HTMLPageScheduleElement: {
      prototype: HTMLPageScheduleElement;
      new (): HTMLPageScheduleElement;
    };
    

    interface HTMLPageSessionElement extends StencilComponents.PageSession, HTMLStencilElement {}

    var HTMLPageSessionElement: {
      prototype: HTMLPageSessionElement;
      new (): HTMLPageSessionElement;
    };
    

    interface HTMLPageSignupElement extends StencilComponents.PageSignup, HTMLStencilElement {}

    var HTMLPageSignupElement: {
      prototype: HTMLPageSignupElement;
      new (): HTMLPageSignupElement;
    };
    

    interface HTMLPageSpeakerDetailElement extends StencilComponents.PageSpeakerDetail, HTMLStencilElement {}

    var HTMLPageSpeakerDetailElement: {
      prototype: HTMLPageSpeakerDetailElement;
      new (): HTMLPageSpeakerDetailElement;
    };
    

    interface HTMLPageSpeakerListElement extends StencilComponents.PageSpeakerList, HTMLStencilElement {}

    var HTMLPageSpeakerListElement: {
      prototype: HTMLPageSpeakerListElement;
      new (): HTMLPageSpeakerListElement;
    };
    

    interface HTMLPageSupportElement extends StencilComponents.PageSupport, HTMLStencilElement {}

    var HTMLPageSupportElement: {
      prototype: HTMLPageSupportElement;
      new (): HTMLPageSupportElement;
    };
    

    interface HTMLPageTabsElement extends StencilComponents.PageTabs, HTMLStencilElement {}

    var HTMLPageTabsElement: {
      prototype: HTMLPageTabsElement;
      new (): HTMLPageTabsElement;
    };
    

    interface HTMLPageTutorialElement extends StencilComponents.PageTutorial, HTMLStencilElement {}

    var HTMLPageTutorialElement: {
      prototype: HTMLPageTutorialElement;
      new (): HTMLPageTutorialElement;
    };
    

  namespace JSX {
    interface Element {}
    export interface IntrinsicElements {
    'app-root': JSXElements.AppRootAttributes;
    'page-about-popover': JSXElements.PageAboutPopoverAttributes;
    'page-about': JSXElements.PageAboutAttributes;
    'page-account': JSXElements.PageAccountAttributes;
    'page-login': JSXElements.PageLoginAttributes;
    'page-map': JSXElements.PageMapAttributes;
    'page-schedule-filter': JSXElements.PageScheduleFilterAttributes;
    'page-schedule': JSXElements.PageScheduleAttributes;
    'page-session': JSXElements.PageSessionAttributes;
    'page-signup': JSXElements.PageSignupAttributes;
    'page-speaker-detail': JSXElements.PageSpeakerDetailAttributes;
    'page-speaker-list': JSXElements.PageSpeakerListAttributes;
    'page-support': JSXElements.PageSupportAttributes;
    'page-tabs': JSXElements.PageTabsAttributes;
    'page-tutorial': JSXElements.PageTutorialAttributes;
    }
  }

  namespace JSXElements {

    export interface AppRootAttributes extends HTMLAttributes {

    }

    export interface PageAboutPopoverAttributes extends HTMLAttributes {

    }

    export interface PageAboutAttributes extends HTMLAttributes {

    }

    export interface PageAccountAttributes extends HTMLAttributes {
      'onUserDidLogOut'?: (event: CustomEvent) => void;
    }

    export interface PageLoginAttributes extends HTMLAttributes {
      'onUserDidLogIn'?: (event: CustomEvent) => void;
    }

    export interface PageMapAttributes extends HTMLAttributes {

    }

    export interface PageScheduleFilterAttributes extends HTMLAttributes {
      'excludedTracks'?: string[];
    }

    export interface PageScheduleAttributes extends HTMLAttributes {

    }

    export interface PageSessionAttributes extends HTMLAttributes {
      'goback'?: string;
      'sessionId'?: string;
    }

    export interface PageSignupAttributes extends HTMLAttributes {

    }

    export interface PageSpeakerDetailAttributes extends HTMLAttributes {
      'speakerId'?: string;
    }

    export interface PageSpeakerListAttributes extends HTMLAttributes {

    }

    export interface PageSupportAttributes extends HTMLAttributes {

    }

    export interface PageTabsAttributes extends HTMLAttributes {

    }

    export interface PageTutorialAttributes extends HTMLAttributes {

    }
  }

  interface HTMLElementTagNameMap {
    'app-root': HTMLAppRootElement
    'page-about-popover': HTMLPageAboutPopoverElement
    'page-about': HTMLPageAboutElement
    'page-account': HTMLPageAccountElement
    'page-login': HTMLPageLoginElement
    'page-map': HTMLPageMapElement
    'page-schedule-filter': HTMLPageScheduleFilterElement
    'page-schedule': HTMLPageScheduleElement
    'page-session': HTMLPageSessionElement
    'page-signup': HTMLPageSignupElement
    'page-speaker-detail': HTMLPageSpeakerDetailElement
    'page-speaker-list': HTMLPageSpeakerListElement
    'page-support': HTMLPageSupportElement
    'page-tabs': HTMLPageTabsElement
    'page-tutorial': HTMLPageTutorialElement
  }

  interface ElementTagNameMap {
    'app-root': HTMLAppRootElement;
    'page-about-popover': HTMLPageAboutPopoverElement;
    'page-about': HTMLPageAboutElement;
    'page-account': HTMLPageAccountElement;
    'page-login': HTMLPageLoginElement;
    'page-map': HTMLPageMapElement;
    'page-schedule-filter': HTMLPageScheduleFilterElement;
    'page-schedule': HTMLPageScheduleElement;
    'page-session': HTMLPageSessionElement;
    'page-signup': HTMLPageSignupElement;
    'page-speaker-detail': HTMLPageSpeakerDetailElement;
    'page-speaker-list': HTMLPageSpeakerListElement;
    'page-support': HTMLPageSupportElement;
    'page-tabs': HTMLPageTabsElement;
    'page-tutorial': HTMLPageTutorialElement;
  }
}
declare global { namespace JSX { interface StencilJSX {} } }

